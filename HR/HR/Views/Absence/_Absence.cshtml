@using HR.Entity.Dto
@using HR.Entity.Extensions
@model HR.Models.AbsenceViewModel
@Html.HiddenFor(model => model.Absence.AbsenceId)
@Html.HiddenFor(model => model.Absence.PersonnelId)
@Html.HiddenFor(model => model.Absence.PersonnelAbsenceEntitlementId)
@Html.HiddenFor(model => model.Absence.PublicHolidayPolicyId)
@Html.HiddenFor(model => model.PersonnelId)
@*@Html.HiddenFor(model => model.EmploymentBeginDate)*@
<div class="form-group">
    <input type="hidden" id="EmploymentBeginDate" data-begin-date="@Model.EmploymentBeginDate.ToString("dd MMMM yyyy")"/>
    <input type="hidden" id="EmploymentEndDate" data-end-date="@Model.EmploymentEndDate.ToString("dd MMMM yyyy")"/>
    @Html.LabelFor(model => model.Period, new {@class = "control-label col-md-3 col-sm-3 col-xs-12"})
    <div class="col-md-6 col-sm-6 col-xs-12">
        <span class="form-control col-md-7 col-xs-12" id="period" data-begin-date="@Model.BeginDate.ToString("dd MMMM yyyy")" data-end-date="@Model.EndDate.ToString("dd MMMM yyyy")">
                @Html.DisplayTextFor(model => model.Period)
            </span>
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Absence.BeginDateUtc, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-3 col-sm-3 col-xs-12 begin">
        @if (Model.Absence.ApprovalStateId == (int)ApprovalStates.Requested)
        {
            @Html.TextBoxFor(model => model.Absence.BeginDateUtc, "{0:dd MMMM yyyy}", new { @class = "form-control col-md-7 col-xs-12 date" })
        }
        else
        {
            @Html.TextBoxFor(model => model.Absence.BeginDateUtc, "{0:dd MMMM yyyy}", new { @class = "form-control col-md-7 col-xs-12", @readonly = "readonly" })
        }
        @Html.ValidationMessageFor(model => model.Absence.BeginDateUtc, "", new { @class = "help-block" })
    </div>
    <div class="col-md-3 col-sm-3 col-xs-12">
        <div class="btn-group" data-toggle="buttons">
            @if (Model.Absence.ApprovalStateId == (int)ApprovalStates.Requested)
            {
                <label class="btn btn-info active @(@Model.Absence.BeginAbsencePart == AbsencePart.FullDay ? "active" : "")">
                    @Html.RadioButtonFor(model => model.Absence.BeginAbsencePart, AbsencePart.FullDay, new { id = "BeginDay", autocomplete = "off", @checked = "checked" })
                    @AbsencePart.FullDay.GetDisplayName()
                </label>
                <label class="btn btn-info @(@Model.Absence.BeginAbsencePart == AbsencePart.HalfDayAM ? "active" : "")">
                    @Html.RadioButtonFor(model => model.Absence.BeginAbsencePart, AbsencePart.HalfDayAM, new { id = "BeginAM", autocomplete = "off" })
                    @AbsencePart.HalfDayAM.GetDisplayName()
                </label>
                <label class="btn btn-info @(@Model.Absence.BeginAbsencePart == AbsencePart.HalfDayPM ? "active" : "")">
                    @Html.RadioButtonFor(model => model.Absence.BeginAbsencePart, AbsencePart.HalfDayPM, new { id = "BeginPM", autocomplete = "off" })
                    @AbsencePart.HalfDayPM.GetDisplayName()
                </label>
            }
            else
            {
                <label class="btn btn-info active @(@Model.Absence.BeginAbsencePart == AbsencePart.FullDay ? "active" : "")">
                    @AbsencePart.FullDay.GetDisplayName()
                </label>
                <label class="btn btn-info @(@Model.Absence.BeginAbsencePart == AbsencePart.HalfDayAM ? "active" : "")">
                    @AbsencePart.HalfDayAM.GetDisplayName()
                </label>
                <label class="btn btn-info @(@Model.Absence.BeginAbsencePart == AbsencePart.HalfDayPM ? "active" : "")">
                    @AbsencePart.HalfDayPM.GetDisplayName()
                </label>
            }
        </div>
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Absence.EndDateUtc, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-3 col-sm-3 col-xs-12 end">
        @if (Model.Absence.ApprovalStateId == (int)ApprovalStates.Requested)
        {
            @Html.TextBoxFor(model => model.Absence.EndDateUtc, "{0:dd MMMM yyyy}", new { @class = "form-control col-md-7 col-xs-12 date" })
        }
        else
        {
            @Html.TextBoxFor(model => model.Absence.EndDateUtc, "{0:dd MMMM yyyy}", new { @class = "form-control col-md-7 col-xs-12", @readonly = "readonly" })
        }
        @Html.ValidationMessageFor(model => model.Absence.EndDateUtc, "", new { @class = "help-block" })
    </div>
    <div class="col-md-3 col-sm-3 col-xs-12">
        <div class="btn-group" data-toggle="buttons">

            @if (Model.Absence.ApprovalStateId == (int)ApprovalStates.Requested)
            {
                <label class="btn btn-info active @(@Model.Absence.EndAbsencePart == AbsencePart.FullDay ? "active" : "")">
                    @Html.RadioButtonFor(model => model.Absence.EndAbsencePart, AbsencePart.FullDay, new { id = "EndDay", autocomplete = "off", @checked = "checked" })
                    @AbsencePart.FullDay.GetDisplayName()
                </label>
                <label class="btn btn-info @(@Model.Absence.EndAbsencePart == AbsencePart.HalfDayAM ? "active" : "")">
                    @Html.RadioButtonFor(model => model.Absence.EndAbsencePart, AbsencePart.HalfDayAM, new { id = "EndAM", autocomplete = "off" })
                    @AbsencePart.HalfDayAM.GetDisplayName()
                </label>
                <label class="btn btn-info @(@Model.Absence.EndAbsencePart == AbsencePart.HalfDayPM ? "active" : "")">
                    @Html.RadioButtonFor(model => model.Absence.EndAbsencePart, AbsencePart.HalfDayPM, new { id = "EndPM", autocomplete = "off" })
                    @AbsencePart.HalfDayPM.GetDisplayName()
                </label>
            }
            else
            {
                <label class="btn btn-info active @(@Model.Absence.EndAbsencePart == AbsencePart.FullDay ? "active" : "")">
                    @AbsencePart.FullDay.GetDisplayName()
                </label>
                <label class="btn btn-info @(@Model.Absence.EndAbsencePart == AbsencePart.HalfDayAM ? "active" : "")">
                    @AbsencePart.HalfDayAM.GetDisplayName()
                </label>
                <label class="btn btn-info @(@Model.Absence.EndAbsencePart == AbsencePart.HalfDayPM ? "active" : "")">
                    @AbsencePart.HalfDayPM.GetDisplayName()
                </label>

            }
        </div>
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Absence.AbsenceTypeId, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @if (Model.Absence.ApprovalStateId == (int)ApprovalStates.Requested)
        {
            @Html.DropDownListFor(model => model.Absence.AbsenceTypeId, Model.AbsenceTypes, null, new { @class = "form-control col-md-7 col-xs-12" })
        }
        else
        {
            @Html.DropDownListFor(model => model.Absence.AbsenceTypeId, Model.AbsenceTypes, null, new { @class = "form-control col-md-7 col-xs-12", @disabled = "disabled" })
       }
        @Html.ValidationMessageFor(model => model.Absence.AbsenceTypeId, "", new { @class = "help-block" })
    </div>
</div>
<div class="row" id="entitlement-details" @if (Model.PersonnelAbsenceEntitlement == null) { <text> style="display:none;" </text>  }>
    <div class="animated flipInY col-md-offset-3 col-sm-offset-3 col-md-3 col-sm-6 col-xs-12">
        <div class="tile-stats">
            <div class="icon">
                <i class="fa fa-calendar"></i>
            </div>
            <div id="entitlement-remaining" class="count">@Model.PersonnelAbsenceEntitlement.Remaining</div>
            <h3>Remaining</h3>
            <p>Number of days entitlement remaining.</p>
        </div>
    </div>
    <div class="animated flipInY col-md-offset-0 col-sm-offset-3 col-md-3 col-sm-6 col-xs-12">
        <div class="tile-stats">
            <div class="icon">
                <i class="fa fa-calendar-minus-o"></i>
            </div>
            <div id="after-booking" class="count">@Model.PersonnelAbsenceEntitlement.Remaining</div>
            <h3>After Booking</h3>
            <p>Number of days entitlement remaining after booking this request.</p>
        </div>
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Absence.Description, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @if (Model.Absence.ApprovalStateId == (int)ApprovalStates.Requested)
        {
            @Html.TextBoxFor(model => model.Absence.Description, new { @class = "form-control col-md-7 col-xs-12" })
        }
        else
        {
            @Html.TextBoxFor(model => model.Absence.Description, new { @class = "form-control col-md-7 col-xs-12", @readonly = "readonly"})
        }
        @Html.ValidationMessageFor(model => model.Absence.Description, "", new { @class = "help-block" })
    </div>
</div>
@*@if (Model.IsAdmin)
    {

        <div class="form-group">
            @Html.LabelFor(model => model.Absence.ReturnToWorkCompleted, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.Absence.ReturnToWorkCompleted, new { @class = "form-control col-md-7 col-xs-12" })
                @Html.ValidationMessageFor(model => model.Absence.ReturnToWorkCompleted, "", new { @class = "help-block" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Absence.DoctorsNoteSupplied, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.Absence.DoctorsNoteSupplied, new { @class = "form-control col-md-7 col-xs-12" })
                @Html.ValidationMessageFor(model => model.Absence.DoctorsNoteSupplied, "", new { @class = "help-block" })
            </div>
        </div>
    }*@

<div id="absence-report" class="form-group hidden">
    <label class="control-label col-md-3 col-sm-3 col-xs-12">Requested absence report</label>
    <div class="col-md-6 col-sm-6 col-xs-12">
        <div id="datatable_wrapper" class="dataTables_wrapper form-inline dt-bootstrap no-footer">
            <div class="row">
                <div class="col-xs-12">
                    <table wt-responsive-table class="table table-striped table-bordered table-hover dataTable no-footer" role="grid" aria-describedby="datatable-fixed-header_info">
                        <thead>
                            <tr role="row">
                                <th>Date</th>
                                <th>AM</th>
                                <th>PM</th>
                                <th>Can be booked absent</th>
                                <th>Reason</th>
                            </tr>
                        </thead>
                        <tbody id="absenceDaysTableBody"></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
